<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flask cơ bản on 30 Days Python &amp; Flask</title>
    <link>/chapters/flask-co-ban/</link>
    <description>Recent content in Flask cơ bản on 30 Days Python &amp; Flask</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 09 Dec 2018 16:19:54 +0700</lastBuildDate>
    
	<atom:link href="/chapters/flask-co-ban/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Xây dựng URL</title>
      <link>/chapters/flask-co-ban/xay-dung-url/</link>
      <pubDate>Sun, 09 Dec 2018 16:28:59 +0700</pubDate>
      
      <guid>/chapters/flask-co-ban/xay-dung-url/</guid>
      <description>Kỹ thuật Routing Routing (điều hướng) là một kỹ thuật cơ bản giúp truy cập 1 chức năng qua URL.
Kỹ thuật này rất đơn giản,
Mọi request browser gửi tới đều đi qua một Router (bộ điều hướng), có tác dụng dựa vào URL và Method để định vị xem cần dùng hàm nào để xử lý. graph LR A[fa:fa-user Browser] --|POST /users| C{Router} C --|run this function| D[user_new] C -.</description>
    </item>
    
    <item>
      <title>URL nâng cao</title>
      <link>/chapters/flask-co-ban/url-nang-cao/</link>
      <pubDate>Sun, 09 Dec 2018 17:29:50 +0700</pubDate>
      
      <guid>/chapters/flask-co-ban/url-nang-cao/</guid>
      <description>URL Động Ở bài trước, ta đã học cách sử dụng routing cơ bản. Bài này ta sẽ tiếp cận với một vấn đề khó hơn: URL động
Ta cần định nghĩa URL trong `@app.route** để router có thể điều hướng chính xác. Vậy làm thế nào để xử lý với những URL có thể bị thay đổi?
Ví dụ Lưu file sau với tên hello.py
from flask import Flask app = Flask(__name__) @app.</description>
    </item>
    
    <item>
      <title>Giới thiệu Template</title>
      <link>/chapters/flask-co-ban/gioi-thieu-template/</link>
      <pubDate>Sun, 09 Dec 2018 19:35:11 +0700</pubDate>
      
      <guid>/chapters/flask-co-ban/gioi-thieu-template/</guid>
      <description>Giải bài phần trước from flask import Flask app = Flask(__name__) @app.route(&#39;/sum/&amp;lt;int:a&amp;gt;/&amp;lt;int:b&amp;gt;&#39;) def sum(a,b): return &#39;%s + %s = %s&#39; % (a, b, a+b) @app.route(&#39;/sub/&amp;lt;int:a&amp;gt;/&amp;lt;int:b&amp;gt;&#39;) def sub(a,b): return &#39;%s - %s = %s&#39; % (a, b, a-b) if __name__ == &#39;__main__&#39;: app.run(debug = True)  Giới thiệu Chúng ta cùng thử nghiệm một demo nhỏ như sau:
Lưu lại với file hello.py:
from flask import Flask app = Flask(__name__) @app.</description>
    </item>
    
    <item>
      <title>Static File</title>
      <link>/chapters/flask-co-ban/static-file/</link>
      <pubDate>Sun, 09 Dec 2018 22:19:02 +0700</pubDate>
      
      <guid>/chapters/flask-co-ban/static-file/</guid>
      <description>Giải bài phần trước: File app.py:
from flask import Flask from flask import render_template app = Flask(__name__) @app.route(&#39;/sum/&amp;lt;int:a&amp;gt;/&amp;lt;int:b&amp;gt;&#39;) def sum(a, b): return render_template(&#39;ketqua.html&#39;, a=a, b=b, c=a+b, phep=&#39;+&#39;) @app.route(&#39;/sub/&amp;lt;int:a&amp;gt;/&amp;lt;int:b&amp;gt;&#39;) def sub(a, b): return render_template(&#39;ketqua.html&#39;, a=a, b=b, c=a-b, phep=&#39;-&#39;) if __name__ == &#39;__main__&#39;: app.run(debug = True)  File templates/ketqua.html
&amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;{{ a }} {{ phep }} {{ b }} = {{ c }}&amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  File tĩnh/File tài nguyên Các ứng dụng web thường cần thêm những file tĩnh (như file css, javascript,.</description>
    </item>
    
    <item>
      <title>Làm quen với object request</title>
      <link>/chapters/flask-co-ban/lam-quen-voi-request/</link>
      <pubDate>Sun, 09 Dec 2018 23:02:43 +0700</pubDate>
      
      <guid>/chapters/flask-co-ban/lam-quen-voi-request/</guid>
      <description>Request Object Như đã biết, các thông tin mà browser gửi lên server được chứa trong Request Vậy làm sao để lấy các dữ liệu đó ra?
Flask cung cấp một object gọi là request, chứa các thông tin sau:
 form: là một dictionary chứa key và value là các tham số (parameters) và giá trị của chúng args: chứa nội dung của câu query qua URL (những nội dung sau dấu ?</description>
    </item>
    
  </channel>
</rss>